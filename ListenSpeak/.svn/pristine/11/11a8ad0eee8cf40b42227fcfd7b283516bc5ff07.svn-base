<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ls.spt.lstClassTest.dao.LstClassTestDao" >
  <resultMap id="BaseResultMap" type="com.ls.spt.lstClassTest.entity.LstClassTest" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="continue_time" property="continueTime" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="paper_id" property="paperId" jdbcType="INTEGER" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="introduct_status" property="introductStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, end_time, continue_time, create_time, create_user, paper_id, STATUS,introduct_status
  </sql>
  <select id ="query" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  	select 
	lct.*,t.`name` AS createName
  	from lst_class_test lct
  	JOIN teacher_user t ON lct.create_user=t.id
  	where 1=1 and	lct.status =1
  	<if test="t.name != null and t.name !=''">
  	and	lct.name like CONCAT(CONCAT('%', #{t.name,jdbcType=VARCHAR}), '%') 
  	</if>
  	<if test="t.createName != null and t.createName !=''">
  	and	t.name like CONCAT(CONCAT('%', #{t.createName,jdbcType=VARCHAR}), '%') 
  	</if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from lst_class_test
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from lst_class_test
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ls.spt.lstClassTest.entity.LstClassTest" >
    insert into lst_class_test (id, name, end_time, 
      continue_time, create_time, create_user, 
      paper_id, STATUS,introduct_status)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{endTime,jdbcType=TIMESTAMP}, 
      #{continueTime,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, 
      #{paperId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER},#{introductStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.ls.spt.lstClassTest.entity.LstClassTest" >
    insert into lst_class_test
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="continueTime != null" >
        continue_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="paperId != null" >
        paper_id,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="introductStatus != null" >
        introduct_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="continueTime != null" >
        #{continueTime,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="paperId != null" >
        #{paperId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="introductStatus != null" >
         #{introductStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="bathDelete" parameterType="java.util.HashMap">
  		update lst_class_test set status=2 where id in
  		 	<foreach collection="ids" item="id" index="index"
			open="(" separator="," close=")">
			#{id,jdbcType=INTEGER}
			</foreach>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ls.spt.lstClassTest.entity.LstClassTest" >
    update lst_class_test
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="continueTime != null" >
        continue_time = #{continueTime,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="paperId != null" >
        paper_id = #{paperId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="introductStatus != null" >
        introduct_status = #{introductStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ls.spt.lstClassTest.entity.LstClassTest" >
    update lst_class_test
    set name = #{name,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      continue_time = #{continueTime,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      paper_id = #{paperId,jdbcType=INTEGER},
      STATUS = #{status,jdbcType=INTEGER},
      introduct_status = #{introductStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <insert id="insertToTestCl" parameterType="java.util.HashMap">
   insert into lst_class_test_cl 
   <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="testId != null" >
        test_id,
      </if>
      <if test="classCode != null" >
        class_code,
      </if>
    </trim>
     <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="testId != null" >
        #{testId,jdbcType=INTEGER},
      </if>
      <if test="classCode != null" >
        #{classCode,jdbcType=VARCHAR},
      </if>
     </trim>   
  </insert>
  <select id="getTestInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  		SELECT lc.class_code as classCode,lc.`class_name` as className,lctc.class_code as cClassCode FROM lst_class lc 
		LEFT JOIN (SELECT * FROM lst_class_test_cl WHERE test_id=#{id,jdbcType=INTEGER}) lctc ON lc.`class_code` =lctc.`class_code` 
		GROUP BY lc.class_code,lc.`class_name`
  </select>
  <delete id="deleteToTestCl" parameterType="com.ls.spt.lstClassTest.entity.LstClassTest">
  		delete from lst_class_test_cl where test_id=#{id,jdbcType=INTEGER}
  </delete>
</mapper>