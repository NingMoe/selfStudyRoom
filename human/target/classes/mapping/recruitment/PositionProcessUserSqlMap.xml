<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.human.recruitment.dao.PositionProcessUserDao" >
  <resultMap id="BaseResultMap" type="com.human.recruitment.entity.PositionProcessUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="VARCHAR" />
    <result column="position_id" property="positionId" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="node_id" property="nodeId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, email, name, role, position_id,type, node_id 
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from position_process_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="getProcessUserByCondition" resultMap="BaseResultMap" parameterType="com.human.recruitment.entity.PositionProcessUser" >
    select 
    <include refid="Base_Column_List" />
    from position_process_user
    where 1=1 
    <if test="email != null" >
    	and email = #{email,jdbcType=VARCHAR}
    </if>
    <if test="role != null" >
    	and role = #{role,jdbcType=VARCHAR}
    </if>
    <if test="positionId != null" >
    	and position_id = #{positionId,jdbcType=VARCHAR}
    </if>
    <if test="type != null" >
    	and type = #{type,jdbcType=VARCHAR}
    </if>
    <if test="nodeId != null" >
    	and node_id = #{nodeId,jdbcType=VARCHAR}
    </if>
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from position_process_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.human.recruitment.entity.PositionProcessUser" >
    insert into position_process_user (id, email, name, 
      role, position_id, type,node_id
      )
    values (#{id,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{role,jdbcType=VARCHAR}, #{positionId,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{nodeId,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.human.recruitment.entity.PositionProcessUser" >
    update position_process_user
    <set >
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="positionId != null" >
        position_id = #{positionId,jdbcType=VARCHAR},
      </if>
      <if test="nodeId != null" >
        node_id = #{nodeId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <insert id="insertProcessUsers" parameterType="java.util.List">
        insert into position_process_user(email, name, role, position_id,type node_id) values
        <foreach item="item" collection="list" separator=",">
            (#{item.email},#{item.name},#{item.role},#{item.positionId},#{item.type},#{item.nodeId})
        </foreach>
  </insert>
  
  <select id="getProcessUserByBpmAction" resultMap="BaseResultMap" parameterType="com.human.bpm.entity.BpmAction" >
  	    SELECT pu.* FROM hr_resume_flow hr 
		JOIN position_process p ON hr.`position_process_id` = p.id 
		JOIN position_process_user pu ON p.`POSITION_ID` = pu.`position_id` AND p.`TYPE` = pu.`type` 
		JOIN act_transition_config atc ON p.`PROCESS_DEF` = atc.`processdef_id` AND atc.`source_node`= #{sourceNode,jdbcType=VARCHAR} 
		AND atc.`transition_name`= #{action,jdbcType=VARCHAR} 
		WHERE hr.`flow_code` = #{flowCode,jdbcType=VARCHAR} AND pu.`node_id`=atc.`target_node` 
  </select>
</mapper>