<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.human.ielts.dao.IeltsClassEnrollDao" >
  <resultMap id="BaseResultMap" type="com.human.ielts.entity.IeltsClassEnroll" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="student_id" property="student_id" jdbcType="INTEGER" />
    <result column="class_type_id" property="class_type_id" jdbcType="INTEGER" />
    <result column="class_type_name" property="class_type_name" jdbcType="VARCHAR" />
    <result column="student_count" property="student_count" jdbcType="INTEGER" />
    <result column="valid" property="valid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, student_id, class_type_id, valid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ielts_class_enroll
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- 班级高分学员分布 -->
  <select id="selectclasstypecount" resultType="com.human.ielts.entity.IeltsClassEnroll" parameterType="java.util.HashMap">
  	SELECT t.id class_type_id, t.class_type_name, COUNT(e.student_id) student_count  FROM ielts_class_enroll e
	LEFT JOIN ielts_class_type t
	ON e.class_type_id = t.id
	LEFT JOIN 	
	(
	SELECT student_id, MAX(total) total FROM ielts_enroll_info
	WHERE test_time IS NOT NULL
	AND total IS NOT NULL 
	<if test="left_test_time != null">
  		and test_time &gt; #{left_test_time,jdbcType=TIMESTAMP}
  	</if>
  	<if test="right_test_time != null">
  		and test_time &lt; #{right_test_time,jdbcType=TIMESTAMP}
  	</if>
	GROUP BY student_id
	) s
	ON e.student_id = s.student_id
	WHERE s.total IS NOT NULL AND total >= 7
	GROUP BY t.id
  </select>
  
    <!-- 班级高分学员分布 -->
  <select id="selectTeacherclasstypecount" resultType="com.human.ielts.entity.IeltsClassEnroll" parameterType="java.util.HashMap">
  	SELECT t.id class_type_id, t.class_type_name, COUNT(e.student_id) student_count  FROM ielts_class_enroll e
	LEFT JOIN ielts_class_type t
	ON e.class_type_id = t.id
	LEFT JOIN 	
	(
	SELECT e.student_id, MAX(e.total) total FROM ielts_enroll_info e
	RIGHT JOIN ielts_student_teacher s
	on e.student_id = s.student_id
	WHERE s.email_addr = #{eamil_addr,jdbcType=VARCHAR}
	AND e.test_time IS NOT NULL
	AND e.total IS NOT NULL 
	<if test="left_test_time != null">
  		and e.test_time &gt; #{left_test_time,jdbcType=TIMESTAMP}
  	</if>
  	<if test="right_test_time != null">
  		and e.test_time &lt; #{right_test_time,jdbcType=TIMESTAMP}
  	</if>
	GROUP BY e.student_id
	) s
	ON e.student_id = s.student_id
	WHERE s.total IS NOT NULL AND total >= 7
	GROUP BY t.id
  </select>
  
  <!-- 通过学员id删除班级类型关联  -->
  <delete id="deleteByStudentId" parameterType="java.lang.Integer">
  	delete from ielts_class_enroll
    where student_id = #{book_id,jdbcType=INTEGER}
  </delete>
  
  <!-- 通过学员id删除班级类型关联  -->
  <delete id="deleteByClasstypeId" parameterType="java.lang.Integer">
  	delete from ielts_class_enroll
    where class_type_id = #{class_type_id,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ielts_class_enroll
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.human.ielts.entity.IeltsClassEnroll" >
    insert into ielts_class_enroll (id, student_id, class_type_id, 
      valid)
    values (#{id,jdbcType=INTEGER}, #{student_id,jdbcType=INTEGER}, #{class_type_id,jdbcType=INTEGER}, 
      #{valid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.human.ielts.entity.IeltsClassEnroll" >
    insert into ielts_class_enroll
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="student_id != null" >
        student_id,
      </if>
      <if test="class_type_id != null" >
        class_type_id,
      </if>
      <if test="valid != null" >
        valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="student_id != null" >
        #{student_id,jdbcType=INTEGER},
      </if>
      <if test="class_type_id != null" >
        #{class_type_id,jdbcType=INTEGER},
      </if>
      <if test="valid != null" >
        #{valid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.human.ielts.entity.IeltsClassEnroll" >
    update ielts_class_enroll
    <set >
      <if test="student_id != null" >
        student_id = #{student_id,jdbcType=INTEGER},
      </if>
      <if test="class_type_id != null" >
        class_type_id = #{class_type_id,jdbcType=INTEGER},
      </if>
      <if test="valid != null" >
        valid = #{valid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.human.ielts.entity.IeltsClassEnroll" >
    update ielts_class_enroll
    set student_id = #{student_id,jdbcType=INTEGER},
      class_type_id = #{class_type_id,jdbcType=INTEGER},
      valid = #{valid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>