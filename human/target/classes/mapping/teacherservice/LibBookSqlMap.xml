<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.human.teacherservice.dao.LibBookDao" >
  <resultMap id="BaseResultMap" type="com.human.teacherservice.entity.LibBook" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="book_name" property="book_name" jdbcType="VARCHAR" />
    <result column="book_code" property="book_code" jdbcType="VARCHAR" />
    <result column="book_author" property="book_author" jdbcType="VARCHAR" />
    <result column="book_publishing" property="book_publishing" jdbcType="VARCHAR" />
    <result column="book_info" property="book_info" jdbcType="VARCHAR" />
    <result column="book_cover" property="book_cover" jdbcType="VARCHAR" />
    <result column="book_count" property="book_count" jdbcType="INTEGER" />
    <result column="book_price" property="book_price" jdbcType="DOUBLE" />
    <result column="book_type" property="book_type" jdbcType="INTEGER" />
    <result column="book_type_name" property="book_type_name" jdbcType="VARCHAR" />
    <result column="book_address" property="book_address" jdbcType="VARCHAR" />
    <result column="book_school" property="book_school" jdbcType="VARCHAR" />
    
    <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
    <result column="valid" property="valid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, book_name,book_code, book_author, book_publishing, book_info, book_cover, book_count, 
    book_price, book_type, book_address, book_school, create_time, valid
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select *
    from lib_book
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByIds" resultType="java.util.HashMap" parameterType="java.util.ArrayList">
  	select b.id, b.book_name, b.book_code, b.book_author, b.book_publishing, b.book_info, b.book_count, b.book_price, t.type_name book_type_name,
  	b.book_address
    from lib_book b
    left join lib_book_type t on b.book_type = t.id
    where b.id in
    <foreach collection="list" item="id" index="index"
			open="(" separator="," close=")">
			#{id,jdbcType=INTEGER}
	</foreach>
  </select>
  
  <select id="query" resultMap="BaseResultMap" parameterType="java.util.HashMap">
  	select b.id, b.book_name,b.book_code, b.book_author, b.book_publishing, 
  	b.book_info, b.book_cover, b.book_count, 
    b.book_price, b.book_type,t.type_name as book_type_name, b.book_address, 
    c.company_name as book_school,
    b.create_time, b.valid 
  	from lib_book b
  	LEFT JOIN hr_company c ON b.book_school = c.company_id
  	LEFT JOIN lib_book_type t ON b.book_type = t.id
  	where 1 = 1
  	<if test="t.book_name != null and t.book_name != ''">
  	 and b.book_name like CONCAT(CONCAT('%', #{t.book_name,jdbcType=VARCHAR}), '%')
  	</if>
  	<if test="t.book_code != null and t.book_code != ''">
  	 and b.book_code like CONCAT(CONCAT('%', #{t.book_code,jdbcType=VARCHAR}), '%')
  	</if>
  	<if test="t.book_type != null">
  	 and b.book_type = #{t.book_type,jdbcType=INTEGER}
  	</if>
  	<if test="t.book_school != null and t.book_school != ''">
  	 and b.book_school = #{t.book_school,jdbcType=VARCHAR}
  	</if>    	
  	<if test="t.valid != null">
  	 and b.valid = #{t.valid,jdbcType=INTEGER}
  	</if>
  	<if test="t.left_create_time != null">
  	 and b.create_time &gt;= #{t.left_create_time,jdbcType=TIMESTAMP}
  	</if>
  	<if test="t.right_create_time != null">
  	 and b.create_time &lt;= #{t.right_create_time,jdbcType=TIMESTAMP}
  	</if>
  	order by b.id desc
  </select>
  
  <select id="selectBookInfo" resultType="com.human.teacherservice.entity.LibBook" parameterType="java.util.HashMap">
  	 SELECT b.*, t.type_name book_type_name, (SELECT COUNT(1) FROM lib_borrow_list l WHERE l.`book_id` = b.id AND l.`return_time` IS NULL) num
     FROM lib_book_type t
     LEFT JOIN lib_book b ON t.id = b.book_type
     WHERE t.valid = 1 and b.valid = 1 and book_school = #{school_id,jdbcType=VARCHAR}
  	 <if test="book_type != null">
      and b.book_type = #{book_type,jdbcType=INTEGER}
     </if>
     <if test="book_name != null and book_name != ''">
      and b.book_name like CONCAT(CONCAT('%', #{book_name,jdbcType=VARCHAR}), '%')
     </if>
     <if test="book_code != null and book_code != ''">
      and b.book_code like CONCAT(CONCAT('%', #{book_code,jdbcType=VARCHAR}), '%')
     </if>
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from lib_book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.human.teacherservice.entity.LibBook" >
    insert into lib_book (id, book_name, book_code, book_author, 
      book_publishing, book_info, book_cover, 
      book_count, book_price, book_type, 
      book_address, book_school, create_time, 
      valid)
    values (#{id,jdbcType=INTEGER}, #{book_name,jdbcType=VARCHAR}, #{book_code,jdbcType=VARCHAR}, #{book_author,jdbcType=VARCHAR}, 
      #{book_publishing,jdbcType=VARCHAR}, #{book_info,jdbcType=VARCHAR}, #{book_cover,jdbcType=VARCHAR}, 
      #{book_count,jdbcType=INTEGER}, #{book_price,jdbcType=DOUBLE}, #{book_type,jdbcType=INTEGER}, 
      #{book_address,jdbcType=VARCHAR}, #{book_school,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP}, 
      #{valid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.human.teacherservice.entity.LibBook" >
    insert into lib_book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="book_name != null" >
        book_name,
      </if>
      <if test="book_code != null" >
        book_code,
      </if>
      <if test="book_author != null" >
        book_author,
      </if>
      <if test="book_publishing != null" >
        book_publishing,
      </if>
      <if test="book_info != null" >
        book_info,
      </if>
      <if test="book_cover != null" >
        book_cover,
      </if>
      <if test="book_count != null" >
        book_count,
      </if>
      <if test="book_price != null" >
        book_price,
      </if>
      <if test="book_type != null" >
        book_type,
      </if>
      <if test="book_address != null" >
        book_address,
      </if>
      <if test="book_school != null" >
        book_school,
      </if>
      <if test="create_time != null" >
        create_time,
      </if>
      <if test="valid != null" >
        valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="book_name != null" >
        #{book_name,jdbcType=VARCHAR},
      </if>
      <if test="book_code != null" >
        #{book_code,jdbcType=VARCHAR},
      </if>
      <if test="book_author != null" >
        #{book_author,jdbcType=VARCHAR},
      </if>
      <if test="book_publishing != null" >
        #{book_publishing,jdbcType=VARCHAR},
      </if>
      <if test="book_info != null" >
        #{book_info,jdbcType=VARCHAR},
      </if>
      <if test="book_cover != null" >
        #{book_cover,jdbcType=VARCHAR},
      </if>
      <if test="book_count != null" >
        #{book_count,jdbcType=INTEGER},
      </if>
      <if test="book_price != null" >
        #{book_price,jdbcType=DOUBLE},
      </if>
      <if test="book_type != null" >
        #{book_type,jdbcType=INTEGER},
      </if>
      <if test="book_address != null" >
        #{book_address,jdbcType=VARCHAR},
      </if>
      <if test="book_school != null" >
        #{book_school,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null" >
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null" >
        #{valid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.human.teacherservice.entity.LibBook" >
    update lib_book
    <set >
      <if test="book_name != null" >
        book_name = #{book_name,jdbcType=VARCHAR},
      </if>
       <if test="book_code != null" >
        book_code = #{book_code,jdbcType=VARCHAR},
      </if>
      <if test="book_author != null" >
        book_author = #{book_author,jdbcType=VARCHAR},
      </if>
      <if test="book_publishing != null" >
        book_publishing = #{book_publishing,jdbcType=VARCHAR},
      </if>
      <if test="book_info != null" >
        book_info = #{book_info,jdbcType=VARCHAR},
      </if>
      <if test="book_cover != null" >
        book_cover = #{book_cover,jdbcType=VARCHAR},
      </if>
      <if test="book_count != null" >
        book_count = #{book_count,jdbcType=INTEGER},
      </if>
      <if test="book_price != null" >
        book_price = #{book_price,jdbcType=DOUBLE},
      </if>
      <if test="book_type != null" >
        book_type = #{book_type,jdbcType=INTEGER},
      </if>
      <if test="book_address != null" >
        book_address = #{book_address,jdbcType=VARCHAR},
      </if>
      <if test="book_school != null" >
        book_school = #{book_school,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null" >
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null" >
        valid = #{valid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 批量禁用 -->
  <update id="updateFalseByIds" parameterType="java.util.ArrayList">
  	update lib_book set valid = 0
  	where id in
  	<foreach collection="list" item="id" index="index"
			open="(" separator="," close=")">
			#{id,jdbcType=INTEGER}
	</foreach>
  </update>
  
  <!-- 批量启用 -->
  <update id="updateTrueByIds" parameterType="java.util.ArrayList">
  	update lib_book set valid = 1
  	where id in
  	<foreach collection="list" item="id" index="index"
			open="(" separator="," close=")">
			#{id,jdbcType=INTEGER}
	</foreach>
  </update>
  
  
  <update id="updateByPrimaryKey" parameterType="com.human.teacherservice.entity.LibBook" >
    update lib_book
    set book_name = #{book_name,jdbcType=VARCHAR},
    	book_code = #{book_code,jdbcType=VARCHAR},
      book_author = #{book_author,jdbcType=VARCHAR},
      book_publishing = #{book_publishing,jdbcType=VARCHAR},
      book_info = #{book_info,jdbcType=VARCHAR},
      book_cover = #{book_cover,jdbcType=VARCHAR},
      book_count = #{book_count,jdbcType=INTEGER},
      book_price = #{book_price,jdbcType=DOUBLE},
      book_type = #{book_type,jdbcType=INTEGER},
      book_address = #{book_address,jdbcType=VARCHAR},
      book_school = #{book_school,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      valid = #{valid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>