<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.human.teacherservice.dao.LibFeedBackDao" >
  <resultMap id="BaseResultMap" type="com.human.teacherservice.entity.LibFeedBack" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="company_id" property="companyId" jdbcType="VARCHAR" />
    <result column="email_addr" property="emailAddr" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="is_valid" property="isValid" jdbcType="INTEGER" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="dept_name" property="deptName" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, company_id, email_addr, content, create_time, is_valid
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from lib_feedback
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from lib_feedback
    where id = #{id,jdbcType=BIGINT}
  </delete>
 
  <insert id="insertSelective" parameterType="com.human.teacherservice.entity.LibFeedBack" >
    insert into lib_feedback
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="emailAddr != null" >
        email_addr,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="isValid != null" >
        is_valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="emailAddr != null" >
        #{emailAddr,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null" >
        #{isValid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.human.teacherservice.entity.LibFeedBack" >
    update lib_feedback
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="emailAddr != null" >
        email_addr = #{emailAddr,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null" >
        is_valid = #{isValid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
    <!-- 分页查询反馈记录 -->
   <select id="query" resultMap="BaseResultMap" parameterType="java.util.HashMap">
    SELECT b.id,b.company_id,u.company_name,u.dept_name,u.name,
	b.email_addr,b.content,b.create_time
	FROM lib_feedback b
	LEFT JOIN hr_company c ON b.company_id = c.company_id
	LEFT JOIN  hr_user u ON b.email_addr=u.email_addr AND b.company_id=u.company
	WHERE b.company_id= #{t.companyId,jdbcType=VARCHAR}
    <if test="t.name != null and t.name !=''" >
        AND u.name like CONCAT(CONCAT('%', #{t.name,jdbcType=VARCHAR}), '%')
    </if>
    ORDER BY b.id DESC
   </select>
   
   <!--导出反馈记录--> 
   <select id="exportAll" resultType="java.util.HashMap" parameterType="java.util.HashMap">
    SELECT u.company_name AS companyName,u.dept_name AS deptName ,u.name,
	b.content,b.create_time AS createTime
	FROM lib_feedback b
	LEFT JOIN hr_company c ON b.company_id = c.company_id
	LEFT JOIN  hr_user u ON b.email_addr=u.email_addr AND b.company_id=u.company
	WHERE b.company_id= #{companyId,jdbcType=VARCHAR}
   </select>
</mapper>