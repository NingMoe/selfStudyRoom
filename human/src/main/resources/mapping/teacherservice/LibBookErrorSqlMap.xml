<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.human.teacherservice.dao.LibBookErrorDao" >
  <resultMap id="BaseResultMap" type="com.human.teacherservice.entity.LibBookError" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="school_id" property="school_id" jdbcType="VARCHAR" />
    <result column="book_id" property="book_id" jdbcType="INTEGER" />
    <result column="book_name" property="book_name" jdbcType="VARCHAR" />
    <result column="book_type" property="book_type" jdbcType="INTEGER" />
    <result column="type_name" property="type_name" jdbcType="VARCHAR" />
    <result column="report_empl_id" property="report_empl_id" jdbcType="INTEGER" />
    <result column="report_name" property="report_name" jdbcType="VARCHAR" />
    <result column="report_time" property="report_time" jdbcType="TIMESTAMP" />
    <result column="report_phone" property="report_phone" jdbcType="VARCHAR" />
    <result column="valid" property="valid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, school_id, book_id, book_name, report_empl_id, report_name, report_time, report_phone, valid
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from lib_book_error
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="query" resultMap="BaseResultMap" parameterType="java.util.HashMap">
  	SELECT e.id, b.book_name, tb.type_name, e.report_empl_id, e.report_name, e.report_time, e.report_phone, e.valid
  	FROM lib_book_error e
  	LEFT JOIN lib_book b ON b.id = e.book_id
  	LEFT JOIN lib_book_type tb ON b.book_type = tb.id
  	WHERE 1 = 1 and b.valid = 1 and tb.valid = 1
  	<if test="t.school_id != null and t.school_id != ''">
  	 and e.school_id = #{t.school_id,jdbcType=VARCHAR}
  	</if>
  	<if test="t.book_name != null and t.book_name != ''">
  	 and b.book_name like CONCAT(CONCAT('%', #{t.book_name,jdbcType=VARCHAR}), '%')
  	</if>
  	<if test="t.book_type != null">
  	 and tb.id = #{t.book_type,jdbcType=INTEGER}
  	</if>
  	<if test="t.left_report_time != null">
  	 and e.report_time &gt; #{t.left_report_time,jdbcType=TIMESTAMP}
  	</if>
  	<if test="t.right_report_time != null">
  	 and e.report_time &lt; #{t.right_report_time,jdbcType=TIMESTAMP}
  	</if>
  	<if test="t.valid != null">
  	 and e.valid = #{t.valid,jdbcType=INTEGER}
  	</if>
  	order by e.id desc
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from lib_book_error
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.human.teacherservice.entity.LibBookError" >
    insert into lib_book_error (id, school_id, book_id, 
      book_name, report_empl_id, report_name, 
      report_time, report_phone, valid)
    values (#{id,jdbcType=INTEGER}, #{school_id,jdbcType=VARCHAR}, #{book_id,jdbcType=INTEGER}, 
      #{book_name,jdbcType=VARCHAR}, #{report_empl_id,jdbcType=INTEGER}, #{report_name,jdbcType=VARCHAR}, 
      #{report_time,jdbcType=TIMESTAMP}, #{report_phone,jdbcType=VARCHAR}, #{valid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.human.teacherservice.entity.LibBookError" >
    insert into lib_book_error
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="school_id != null" >
        school_id,
      </if>
      <if test="book_id != null" >
        book_id,
      </if>
      <if test="book_name != null" >
        book_name,
      </if>
      <if test="report_empl_id != null" >
        report_empl_id,
      </if>
      <if test="report_name != null" >
        report_name,
      </if>
      <if test="report_time != null" >
        report_time,
      </if>
      <if test="report_phone != null" >
        report_phone,
      </if>
      <if test="valid != null" >
        valid
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="school_id != null" >
        #{school_id,jdbcType=VARCHAR},
      </if>
      <if test="book_id != null" >
        #{book_id,jdbcType=INTEGER},
      </if>
      <if test="book_name != null" >
        #{book_name,jdbcType=VARCHAR},
      </if>
      <if test="report_empl_id != null" >
        #{report_empl_id,jdbcType=INTEGER},
      </if>
      <if test="report_name != null" >
        #{report_name,jdbcType=VARCHAR},
      </if>
      <if test="report_time != null" >
        #{report_time,jdbcType=TIMESTAMP},
      </if>
      <if test="report_phone != null" >
        #{report_phone,jdbcType=VARCHAR},
      </if>
      <if test="valid != null" >
        #{valid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.human.teacherservice.entity.LibBookError" >
    update lib_book_error
    <set >
      <if test="school_id != null" >
        school_id = #{school_id,jdbcType=VARCHAR},
      </if>
      <if test="book_id != null" >
        book_id = #{book_id,jdbcType=INTEGER},
      </if>
      <if test="book_name != null" >
        book_name = #{book_name,jdbcType=VARCHAR},
      </if>
      <if test="report_empl_id != null" >
        report_empl_id = #{report_empl_id,jdbcType=INTEGER},
      </if>
      <if test="report_name != null" >
        report_name = #{report_name,jdbcType=VARCHAR},
      </if>
      <if test="report_time != null" >
        report_time = #{report_time,jdbcType=TIMESTAMP},
      </if>
      <if test="report_phone != null" >
        report_phone = #{report_phone,jdbcType=VARCHAR},
      </if>
      <if test="valid != null" >
        valid = #{valid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.human.teacherservice.entity.LibBookError" >
    update lib_book_error
    set school_id = #{school_id,jdbcType=VARCHAR},
      book_id = #{book_id,jdbcType=INTEGER},
      book_name = #{book_name,jdbcType=VARCHAR},
      report_empl_id = #{report_empl_id,jdbcType=INTEGER},
      report_name = #{report_name,jdbcType=VARCHAR},
      report_time = #{report_time,jdbcType=TIMESTAMP},
      report_phone = #{report_phone,jdbcType=VARCHAR},
      valid = #{valid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>