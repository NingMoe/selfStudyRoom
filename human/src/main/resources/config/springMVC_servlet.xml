<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.0.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		 http://www.springframework.org/schema/aop  
    http://www.springframework.org/schema/aop/spring-aop.xsd ">
	<!-- 使注解生效 -->
	<mvc:annotation-driven>

		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
						<value>text/html;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>text/json;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
				<!-- 处理responseBody 里面日期类型 -->
				<property name="objectMapper">
					<bean class="com.fasterxml.jackson.databind.ObjectMapper">
						<property name="dateFormat">
							<bean class="java.text.SimpleDateFormat">
								<constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
							</bean>
						</property>
					</bean>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- 扫描所有的controller -->
	<context:component-scan base-package="com.**.controller">
	</context:component-scan>

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:properties/*.properties</value>
			</list>
		</property>
	</bean>

	<!-- 配置使Spring采用CGLIB代理 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd -->
	<!-- <mvc:resources mapping="/images/**" location="/static/images/" /> <mvc:resources 
		mapping="/js/**" location="/static/js/"/> <mvc:resources mapping="/css/**" 
		location="/static/css/"/> -->
	<!-- InternalResourceViewResolver默认的就是JstlView所以这里就不用配置viewClass了 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	<!-- <mvc:interceptors> <mvc:interceptor> <mvc:mapping path="/**"/> <bean 
		class="com.spt.utils.MyInterceptor"/> </mvc:interceptor> </mvc:interceptors> -->

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 20M=20*1024*1024 -->
		<property name="maxUploadSize" value="20971520" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>

	<!-- 定义异常处理页面 <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> 
		<property name="exceptionMappings"> <props> <prop key="java.sql.SQLException">outException</prop> 
		<prop key="java.io.IOException">outException</prop> </props> </property> 
		</bean> -->

	<!-- 启用基于注解的处理器映射，添加拦截器，类级别的处理器映射 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"> 
		<property name="interceptors"> <list> <bean class="com.fsj.spring.util.MyHandlerInterceptor"/> 
		</list> </property> </bean> -->

	<!-- 配置一个基于注解的定制的WebBindingInitializer，解决日期转换问题，方法级别的处理器映射， 有人说该bean要放在context:component-scan前面，要不然不起作用，但我试的放后面也可以啊。 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> 
		<property name="cacheSeconds" value="0" /> <property name="webBindingInitializer"> 
		<bean class="com.fsj.spring.util.MyWebBinding" /> </property> </bean> -->

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/front/**" />
			<bean class="com.human.utils.OpenIdInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/front/interview/**.html" />
			<mvc:mapping path="/front/resume/**.html" />
			<mvc:mapping path="/front/fastDelivery/**.html" />
			<mvc:mapping path="/front/mine/**.html" />
			<mvc:mapping path="/front/resumeDelivery/**.html" />
			<bean class="com.human.utils.BindInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/wechat/binding/**/*.html" />
			<bean class="com.human.utils.BindingInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
</beans> 