<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.human.ielts.dao.IeltsStudentInfoDao" >
  <resultMap id="BaseResultMap" type="com.human.ielts.entity.IeltsStudentInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="student_name" property="student_name" jdbcType="VARCHAR" />
    <result column="student_phone" property="student_phone" jdbcType="VARCHAR" />
    <result column="advisor" property="advisor" jdbcType="VARCHAR" />
    <result column="student_manager" property="student_manager" jdbcType="VARCHAR" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="grade_name" property="grade_name" jdbcType="VARCHAR" />
    <result column="is_planning" property="is_planning" jdbcType="INTEGER" />
    <result column="creat_time" property="creat_time" jdbcType="TIMESTAMP" />
    <result column="valid" property="valid" jdbcType="INTEGER" />
    
    <result column="total" property="total" jdbcType="DOUBLE" />
    <result column="listening" property="listening" jdbcType="DOUBLE" />
    <result column="reading" property="reading" jdbcType="DOUBLE" />
    <result column="writing" property="writing" jdbcType="DOUBLE" />
    <result column="oral" property="oral" jdbcType="DOUBLE" />
    <result column="is_target" property="is_target" jdbcType="INTEGER" />
    <result column="test_time" property="test_time" jdbcType="TIMESTAMP" />
    
    <collection property="ielts_book_info_list" ofType="com.human.ielts.entity.IeltsBookInfo">
    	<id property="id" column="bid"/>  
        <result property="book_name" column="book_name"/>  
    </collection>
    
    <collection property="ielts_class_type_list" ofType="com.human.ielts.entity.IeltsClassType">
    	<id property="id" column="cid"/>  
        <result property="class_type_name" column="class_type_name"/>  
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    id, student_name, student_phone, advisor, student_manager, school, grade_name, is_planning, 
    creat_time, valid
  </sql>
  
  <!-- 获取学员总数 -->
  <select id="selectStudentCount" resultType="java.lang.Integer">
  	select count(1) from ielts_student_info
  </select>
  
    <!-- 获取学员总数 -->
  <select id="selectTeacherStudentCount" resultType="java.lang.Integer" parameterType="java.util.HashMap">
  	select count(1) from ielts_student_info s
  	right join ielts_student_teacher t
  	on s.id = t.student_id
  	where t.email_addr = #{email_addr,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ielts_student_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- 分页查询学员信息 -->
  <select id="query" resultMap="BaseResultMap" parameterType="java.util.HashMap">
  	select s.id, s.student_name, s.student_phone, s.advisor, s.student_manager, s.school, s.grade_name, s.is_planning, 
    s.creat_time, s.valid, e.total, e.listening, e.reading, e.writing,
    e.oral, e.is_target, e.test_time from ielts_student_info s left join(
	select e1.* from ielts_enroll_info e1
	join
	(	select e2.`student_id`, e2.total, max(e2.`id`) id from ielts_enroll_info e2
	right join
	(
	select  student_id, max(`total`) total 
	from ielts_enroll_info
	where student_id is not null
	group by student_id
	) e3
	on e2.`student_id` = e3.student_id and e2.total = e3.total
	group by e2.`student_id`, e2.total
	) e4
	on e1.id = e4.id
	) e
	on s.id = e.student_id
	where 1 = 1
	<if test="t.student_name != null and t.student_name != ''">
		and s.student_name like CONCAT(CONCAT('%', #{t.student_name,jdbcType=VARCHAR}, '%'))
	</if>
	<if test="t.student_phone != null and t.student_phone != ''">
		and s.student_phone like CONCAT(CONCAT('%', #{t.student_phone,jdbcType=VARCHAR}, '%'))
	</if>
	<if test="t.advisor != null and t.advisor != ''">
		and s.advisor like CONCAT(CONCAT('%', #{t.advisor,jdbcType=VARCHAR}, '%'))
	</if>
	<if test="t.student_manager != null and t.student_manager != ''">
		and s.student_manager like CONCAT(CONCAT('%', #{t.student_manager,jdbcType=VARCHAR}, '%'))
	</if>
	<if test="t.school != null and t.school != ''">
		and s.school like CONCAT(CONCAT('%', #{t.school,jdbcType=VARCHAR}, '%'))
	</if>
	<if test="t.is_planning != null">
		and s.is_planning = #{t.is_planning,jdbcType=INTEGER}
	</if>
  </select>
  
  <!-- 通过姓名手机号获取学生信息 -->
  <select id="selectByStudentNameAndStudentPhone" resultType="com.human.ielts.entity.IeltsStudentInfo" parameterType="java.util.HashMap">
	select * from ielts_student_info
    where student_name = #{student_name,jdbcType=VARCHAR} and student_phone = #{student_phone,jdbcType=VARCHAR} 
  </select>
  
  <!-- 分页查询学员信息 -->
  <select id="queryTeacherStudent" resultMap="BaseResultMap" parameterType="java.util.HashMap">
  	select s.id, s.student_name, s.student_phone, s.advisor, s.student_manager, s.school, s.grade_name, s.is_planning, 
    s.creat_time, s.valid, e.total, e.listening, e.reading, e.writing,
    e.oral, e.is_target, e.test_time from ielts_student_info s 
    RIGHT JOIN ielts_student_teacher t
    ON t.student_id = s.id
    left join(
	select e1.* from ielts_enroll_info e1
	join
	(	select e2.`student_id`, e2.total, max(e2.`id`) id from ielts_enroll_info e2
	right join
	(
	select  student_id, max(`total`) total 
	from ielts_enroll_info
	where student_id is not null
	group by student_id
	) e3
	on e2.`student_id` = e3.student_id and e2.total = e3.total
	group by e2.`student_id`, e2.total
	) e4
	on e1.id = e4.id
	) e
	on s.id = e.student_id
	where 1 = 1 and t.email_addr = #{mailaddr,jdbcType=VARCHAR}
	<if test="t.student_name != null and t.student_name != ''">
		and s.student_name like CONCAT(CONCAT('%', #{t.student_name,jdbcType=VARCHAR}, '%'))
	</if>
	<if test="t.student_phone != null and t.student_phone != ''">
		and s.student_phone like CONCAT(CONCAT('%', #{t.student_phone,jdbcType=VARCHAR}, '%'))
	</if>
	<if test="t.advisor != null and t.advisor != ''">
		and s.advisor like CONCAT(CONCAT('%', #{t.advisor,jdbcType=VARCHAR}, '%'))
	</if>
	<if test="t.student_manager != null and t.student_manager != ''">
		and s.student_manager like CONCAT(CONCAT('%', #{t.student_manager,jdbcType=VARCHAR}, '%'))
	</if>
	<if test="t.school != null and t.school != ''">
		and s.school like CONCAT(CONCAT('%', #{t.school,jdbcType=VARCHAR}, '%'))
	</if>
	<if test="t.is_planning != null">
		and s.is_planning = #{t.is_planning,jdbcType=INTEGER}
	</if>
  </select>
  
  <!-- 通过学员id删除基础信息 -->
  <delete id="deleteByStudentId" parameterType="java.lang.Integer" >
  	delete from ielts_student_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ielts_student_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.human.ielts.entity.IeltsStudentInfo" >
    insert into ielts_student_info (id, student_name, student_phone, 
      advisor, student_manager, school, 
      grade_name, is_planning, creat_time, 
      valid)
    values (#{id,jdbcType=INTEGER}, #{student_name,jdbcType=VARCHAR}, #{student_phone,jdbcType=VARCHAR}, 
      #{advisor,jdbcType=VARCHAR}, #{student_manager,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, 
      #{grade_name,jdbcType=VARCHAR}, #{is_planning,jdbcType=INTEGER}, #{creat_time,jdbcType=TIMESTAMP}, 
      #{valid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.human.ielts.entity.IeltsStudentInfo" >
    insert into ielts_student_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="student_name != null" >
        student_name,
      </if>
      <if test="student_phone != null" >
        student_phone,
      </if>
      <if test="advisor != null" >
        advisor,
      </if>
      <if test="student_manager != null" >
        student_manager,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="grade_name != null" >
        grade_name,
      </if>
      <if test="is_planning != null" >
        is_planning,
      </if>
      <if test="creat_time != null" >
        creat_time,
      </if>
      <if test="valid != null" >
        valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="student_name != null" >
        #{student_name,jdbcType=VARCHAR},
      </if>
      <if test="student_phone != null" >
        #{student_phone,jdbcType=VARCHAR},
      </if>
      <if test="advisor != null" >
        #{advisor,jdbcType=VARCHAR},
      </if>
      <if test="student_manager != null" >
        #{student_manager,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="grade_name != null" >
        #{grade_name,jdbcType=VARCHAR},
      </if>
      <if test="is_planning != null" >
        #{is_planning,jdbcType=INTEGER},
      </if>
      <if test="creat_time != null" >
        #{creat_time,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null" >
        #{valid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.human.ielts.entity.IeltsStudentInfo" >
    update ielts_student_info
    <set >
      <if test="student_name != null" >
        student_name = #{student_name,jdbcType=VARCHAR},
      </if>
      <if test="student_phone != null" >
        student_phone = #{student_phone,jdbcType=VARCHAR},
      </if>
      <if test="advisor != null" >
        advisor = #{advisor,jdbcType=VARCHAR},
      </if>
      <if test="student_manager != null" >
        student_manager = #{student_manager,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="grade_name != null" >
        grade_name = #{grade_name,jdbcType=VARCHAR},
      </if>
      <if test="is_planning != null" >
        is_planning = #{is_planning,jdbcType=INTEGER},
      </if>
      <if test="creat_time != null" >
        creat_time = #{creat_time,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null" >
        valid = #{valid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.human.ielts.entity.IeltsStudentInfo" >
    update ielts_student_info
    set student_name = #{student_name,jdbcType=VARCHAR},
      student_phone = #{student_phone,jdbcType=VARCHAR},
      advisor = #{advisor,jdbcType=VARCHAR},
      student_manager = #{student_manager,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      grade_name = #{grade_name,jdbcType=VARCHAR},
      is_planning = #{is_planning,jdbcType=INTEGER},
      creat_time = #{creat_time,jdbcType=TIMESTAMP},
      valid = #{valid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>