<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.xdf.selfStudyRoom.domain.dao.UserDao">
  <resultMap id="BaseResultMap" type="cn.xdf.selfStudyRoom.domain.entity.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, login_name, password, phone, sex,create_time, create_user, update_time, update_user, 
    status
  </sql>

   <!-- 分页查询用户信息 -->
    <select id="queryPageUser" resultMap="BaseResultMap" parameterType="cn.xdf.selfStudyRoom.domain.entity.User">
		SELECT u.id,u.phone,u.name,u.create_time,u1.name AS create_user,u.status 
        FROM user u 
        LEFT JOIN user u1 ON u.create_user = u1.id 
        WHERE 1=1
		<if test="phone!= null and phone !=''">
			AND u.phone like CONCAT(CONCAT('%', #{phone,jdbcType=VARCHAR}), '%') 
		</if>
		<if test="name != null and name != ''">
			AND u.name  like CONCAT(CONCAT('%', #{name,jdbcType=VARCHAR}), '%') 
		</if> 
		ORDER BY u.id DESC 
	</select>

   <!-- 更新用户状态 -->
	<update id="updateByIds" parameterType="java.util.HashMap">
		update user set status=#{status,jdbcType=VARCHAR}, 
		update_user=#{updateUser,jdbcType=INTEGER} ,
		update_time=now()
		where id in
		<foreach collection="ids" item="id" index="index"
			open="(" separator="," close=")">
			#{id,jdbcType=INTEGER}
		</foreach>
	</update>
    
      <!--查询用户角色  -->
   <select id="getUserRole" resultType="cn.xdf.selfStudyRoom.domain.entity.UserRole" parameterType="cn.xdf.selfStudyRoom.domain.entity.UserRole">
		select
		 user_id userId,role_id roleId
		 from user_role u
		<trim prefix="WHERE" prefixOverrides="AND | OR">
		 <if test="userId!= null ">
			AND user_id=#{userId,jdbcType=INTEGER}
		</if>
		<if test="roleId!= null ">
			AND role_id=#{roleId,jdbcType=INTEGER}
		</if>
		 </trim>
	</select>
	
   <!-- 删除用户角色 -->
   <delete id="delUserRole" parameterType="cn.xdf.selfStudyRoom.domain.entity.UserRole">
	   delete from user_role where
	   <trim  prefixOverrides="AND | OR">
			<if test="userId != null">
				AND user_id=#{userId,jdbcType=INTEGER}
			</if>
			<if test="roleId != null">
				AND role_id=#{roleId,jdbcType=INTEGER}
			</if>
		</trim>
   </delete>
   
  <!-- 保存用户角色 -->
  <insert id="saveUserRole" parameterType="cn.xdf.selfStudyRoom.domain.entity.UserRole" >
    insert into user_role(user_id,role_id) values (#{userId,jdbcType=INTEGER},#{roleId,jdbcType=BIGINT})
  </insert>

</mapper>